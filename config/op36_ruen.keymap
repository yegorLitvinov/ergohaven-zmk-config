#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&sk { quick-release; };

/ {
    combos {
        compatible = "zmk,combos";

        cmben {
            bindings = <&layer_en>;
            key-positions = <2 3 1>;
            layers = <1>;
        };

        cmbru {
            bindings = <&layer_ru>;
            key-positions = <2 3 1>;
            layers = <0>;
        };

        ru_kha {
            bindings = <&kp RU_CYRILLIC_HA>;
            key-positions = <6 7>;
            layers = <1>;
        };

        ru_hrdsgn {
            bindings = <&kp RU_CYRILLIC_HARD_SIGN>;
            key-positions = <7 8>;
            layers = <1>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <20 29>;
        };

        percent_en {
            bindings = <&kp PERCENT>;
            key-positions = <21 22>;
            layers = <3>;
        };

        percent_ru {
            bindings = <&en PERCENT>;
            key-positions = <21 22>;
            layers = <4>;
        };
    };

    macros {
        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N2))>;
            label = "TO_RU";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N1))>;
            label = "TO_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
            tap-ms = <30>;
            wait-ms = <0>;
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en>,
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&to_ru>;

            label = "EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        mac_clip: mac_clip {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LG(SPACE)>,
                <&macro_wait_time 300>,
                <&kp LG(NUMBER_4)>;

            label = "Open Mac Spotlight Clipboard";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
  &kp Q  &kp W  &kp E  &kp R  &kp T                          &kp Y  &kp U  &kp I      &kp O    &kp P
  &kp A  &kp S  &kp D  &kp F  &kp G                          &kp H  &kp J  &kp K      &kp L    &kp SINGLE_QUOTE
  &kp Z  &kp X  &kp C  &kp V  &kp B                          &kp N  &kp M  &kp COMMA  &kp DOT  &sk RIGHT_SHIFT
                       &sl 7  &sl 2  &kp SPACE    &kp ENTER  &sl 3  &sl 6
            >;

            display-name = "Base";
        };

        ru {
            display-name = "Ru";
            bindings = <
  &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE   &kp RU_CYRILLIC_U   &kp RU_CYRILLIC_KA  &kp RU_CYRILLIC_IE                    &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE                              &mt RU_CYRILLIC_SHCHA RU_CYRILLIC_SHA  &kp RU_CYRILLIC_ZE  &kp RU_CYRILLIC_E
  &kp RU_CYRILLIC_EF       &kp RU_CYRILLIC_YERU  &kp RU_CYRILLIC_VE  &kp RU_CYRILLIC_A   &kp RU_CYRILLIC_PE                    &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O                                &kp RU_CYRILLIC_EL                     &kp RU_CYRILLIC_DE  &kp RU_CYRILLIC_ZHE
  &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE   &kp RU_CYRILLIC_ES  &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_I                     &kp RU_CYRILLIC_TE  &mt RU_CYRILLIC_HARD_SIGN RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE                     &kp RU_CYRILLIC_YU  &trans
                                                                     &trans              &trans              &trans    &trans  &sl 4               &trans
            >;
        };

        mods {
            bindings = <
  &kp ESC           &trans    &trans    &trans  &trans                    &trans  &trans  &trans         &trans    &kp BACKSPACE
  &sk LEFT_CONTROL  &sk LALT  &sk LGUI  &trans  &trans                    &trans  &trans  &sk RIGHT_GUI  &sk RALT  &kp TAB
  &trans            &trans    &trans    &trans  &trans                    &trans  &trans  &trans         &trans    &trans
                                        &trans  &trans  &trans    &trans  &mo 5   &trans
            >;

            label = "Modificators";
        };

        sym_en {
            bindings = <
  &kp HASH      &kp CARET     &kp EQUAL       &kp DOUBLE_QUOTES  &kp LEFT_BRACE                          &kp RIGHT_BRACE        &kp GRAVE         &kp EXCL   &kp DOLLAR  &kp BACKSLASH
  &kp QUESTION  &kp ASTERISK  &kp UNDERSCORE  &kp COLON          &kp LEFT_PARENTHESIS                    &kp RIGHT_PARENTHESIS  &kp SEMICOLON     &kp MINUS  &kp AMPS    &kp PIPE
  &kp TILDE     &kp PLUS      &kp AT          &kp LESS_THAN      &kp LEFT_BRACKET                        &kp RBKT               &kp GREATER_THAN  &kp COMMA  &kp DOT     &kp FSLH
                                              &trans             &mo 5                 &trans    &trans  &trans                 &trans
            >;

            display-name = "Sym En";
        };

        sym_ru {
            display-name = "Sym Ru";
            bindings = <
  &en HASH      &en CARET     &kp EQUAL       &kp RU_DOUBLE_QUOTES  &en LEFT_BRACE                          &en RIGHT_BRACE        &en GRAVE         &kp EXCL   &en DOLLAR  &en BACKSLASH
  &kp QUESTION  &en ASTERISK  &kp UNDERSCORE  &en COLON             &kp LEFT_PARENTHESIS                    &kp RIGHT_PARENTHESIS  &en SEMICOLON     &kp MINUS  &en AMPS    &en PIPE
  &en TILDE     &kp PLUS      &en AT          &en LESS_THAN         &en LEFT_BRACKET                        &en RIGHT_BRACKET      &en GREATER_THAN  &en COMMA  &en DOT     &kp SLASH
                                              &trans                &mo 5                 &trans    &trans  &trans                 &trans
            >;
        };

        adj {
            bindings = <
  &trans  &trans                &trans                 &trans                &trans                    &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_CLR       &trans
  &trans  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_AUTO  &kp C_BRIGHTNESS_INC  &trans                    &kp C_PLAY_PAUSE  &kp C_VOLUME_DOWN  &kp K_MUTE    &kp C_VOLUME_UP  &trans
  &trans  &bl BL_DEC            &bl BL_TOG             &bl BL_INC            &trans                    &trans            &trans             &trans        &trans           &trans
                                                       &trans                &trans  &trans    &trans  &trans            &trans
            >;

            display-name = "Adjust";
        };

        num {
            bindings = <
  &trans  &kp N7  &kp N8  &kp N9  &trans                    &trans  &trans  &trans  &trans  &trans
  &kp N0  &kp N4  &kp N5  &kp N6  &kp N0                    &trans  &trans  &trans  &trans  &trans
  &trans  &kp N1  &kp N2  &kp N3  &trans                    &trans  &trans  &trans  &trans  &trans
                          &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "Numbers";
        };

        apps {
            bindings = <
  &trans             &trans                &trans             &trans             &kp LG(LC(LA(T)))                    &trans             &trans             &trans        &kp LG(LC(LA(O)))  &trans
  &trans             &kp LG(LS(NUMBER_5))  &trans             &kp LG(LC(LA(F)))  &kp LG(LC(LA(G)))                    &kp LEFT_ARROW     &kp DOWN_ARROW     &kp UP_ARROW  &kp RIGHT_ARROW    &trans
  &kp LG(LC(LA(Z)))  &trans                &kp LG(LC(LA(C)))  &kp LG(LC(V))      &trans                               &kp LG(LC(LA(N)))  &kp LG(LC(LA(M)))  &trans        &trans             &trans
                                                              &trans             &trans             &trans    &trans  &trans             &trans
            >;

            label = "Applications";
        };
    };
};
